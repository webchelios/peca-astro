---
interface Props {
    speed?: number;
    className?: string;
    image: string;
}

const { speed = 0.5, className = "", image = "asset1" } = Astro.props;
---

<div class={`parallax-cup ${className}`} data-speed={speed}>
    <img src={image} alt="Efecto parallax sobre una imagen decorativa" />
</div>

<style>
    .parallax-cup {
        position: relative;
        z-index: 10;
        will-change: transform;
    }

    .parallax-cup img {
        width: 240px;
        height: auto;
        transition: transform 0.1s ease-out;
    }

    /* ðŸ“± Ocultar en mÃ³viles */
    @media (max-width: 768px) {
        .parallax-cup {
            display: none !important;
        }
    }
</style>

<script>
    document.addEventListener("DOMContentLoaded", () => {
        const parallaxCups = document.querySelectorAll(".parallax-cup");

        const handleParallax = () => {
            const scrolled = window.pageYOffset;

            parallaxCups.forEach((cup) => {
                const img = cup.querySelector("img");
                if (!img) return;

                // ðŸ§  No aplicar si el elemento estÃ¡ oculto o en pantallas pequeÃ±as
                if (window.innerWidth <= 768) {
                    img.style.transform = "";
                    return;
                }

                const speed =
                    parseFloat(cup.getAttribute("data-speed")!) || 0.5;
                const yPos = -(scrolled * speed);
                img.style.transform = `translateY(${yPos}px)`;
            });
        };

        let ticking = false;

        const updateParallax = () => {
            handleParallax();
            ticking = false;
        };

        const onScroll = () => {
            if (!ticking) {
                requestAnimationFrame(updateParallax);
                ticking = true;
            }
        };

        window.addEventListener("scroll", onScroll, { passive: true });
        window.addEventListener("resize", handleParallax, { passive: true });

        // Inicializar
        handleParallax();
    });
</script>
